openapi: 3.0.0
info:
  title: 苏格拉底式法律教学 API
  description: 基于AI的智能法律教学对话系统API
  version: 1.3.0
  contact:
    name: API Support
    email: support@legaltech.edu
    url: https://legaltech.edu/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.legaltech.edu
    description: 生产环境
  - url: https://staging-api.legaltech.edu
    description: 测试环境
  - url: http://localhost:3000
    description: 本地开发

tags:
  - name: Dialogue
    description: 苏格拉底式对话接口
  - name: Classroom
    description: 课堂管理接口
  - name: Health
    description: 健康检查接口

paths:
  /api/socratic:
    post:
      tags:
        - Dialogue
      summary: 创建或继续对话
      description: 发起新的苏格拉底式对话或继续现有对话
      operationId: createDialogue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DialogueRequest'
            examples:
              basic:
                summary: 基础对话请求
                value:
                  messages:
                    - role: user
                      content: 什么是合同效力？
                  currentLevel: 1
              advanced:
                summary: 高级对话请求
                value:
                  messages:
                    - role: user
                      content: 分析这个案例的法律关系
                  caseInfo:
                    title: 买卖合同纠纷
                    description: 详细案情...
                  currentLevel: 3
                  mode: guided
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DialogueResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /api/classroom:
    post:
      tags:
        - Classroom
      summary: 创建课堂
      description: 创建新的教学课堂会话
      operationId: createClassroom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClassroomRequest'
      responses:
        '200':
          description: 成功创建课堂
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassroomResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/classroom/join:
    post:
      tags:
        - Classroom
      summary: 加入课堂
      description: 学生加入现有课堂
      operationId: joinClassroom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinClassroomRequest'
      responses:
        '200':
          description: 成功加入课堂
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinClassroomResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: 课堂不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/health/socratic:
    get:
      tags:
        - Health
      summary: 健康检查
      description: 检查苏格拉底服务健康状态
      operationId: healthCheck
      responses:
        '200':
          description: 服务健康
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

components:
  schemas:
    DialogueRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          description: 对话历史
          items:
            $ref: '#/components/schemas/Message'
          maxItems: 50
        caseInfo:
          $ref: '#/components/schemas/CaseInfo'
        currentLevel:
          type: integer
          description: 当前对话层级
          minimum: 1
          maximum: 5
          default: 1
        mode:
          type: string
          description: 对话模式
          enum: [auto, guided, exam]
          default: auto
        sessionId:
          type: string
          description: 会话ID
        difficulty:
          type: string
          description: 难度等级
          enum: [easy, normal, hard]
          default: normal
        streaming:
          type: boolean
          description: 是否使用流式响应
          default: false

    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant, system]
        content:
          type: string
          maxLength: 5000

    CaseInfo:
      type: object
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 5000
        type:
          type: string
          enum: [contract, tort, criminal, civil]
        difficulty:
          type: string
          enum: [beginner, intermediate, advanced]

    DialogueResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            content:
              type: string
              description: AI回复内容
            level:
              type: integer
              description: 当前层级
            metadata:
              $ref: '#/components/schemas/ResponseMetadata'
            sessionInfo:
              $ref: '#/components/schemas/SessionInfo'
        timestamp:
          type: integer
          format: int64
        duration:
          type: integer
          description: 处理时长(ms)

    ResponseMetadata:
      type: object
      properties:
        questionType:
          type: string
          enum: [observational, factual, analytical, applicative, evaluative]
        suggestedFollowUp:
          type: array
          items:
            type: string
        keyPoints:
          type: array
          items:
            type: string
        relatedLaws:
          type: array
          items:
            type: string

    SessionInfo:
      type: object
      properties:
        sessionId:
          type: string
        messageCount:
          type: integer
        currentLevel:
          type: integer
        progress:
          type: number
          format: float
          minimum: 0
          maximum: 1

    CreateClassroomRequest:
      type: object
      required:
        - teacherId
      properties:
        teacherId:
          type: string
        config:
          type: object
          properties:
            maxStudents:
              type: integer
              default: 50
            duration:
              type: integer
              description: 持续时间(秒)
              default: 3600
            mode:
              type: string
              enum: [interactive, lecture, exam]
            allowVoting:
              type: boolean
              default: true

    ClassroomResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            classroomCode:
              type: string
              pattern: '^[A-Z0-9]{6}$'
            sessionId:
              type: string
            expiresAt:
              type: integer
              format: int64
            joinUrl:
              type: string
              format: uri

    JoinClassroomRequest:
      type: object
      required:
        - classroomCode
      properties:
        classroomCode:
          type: string
          pattern: '^[A-Z0-9]{6}$'
        studentInfo:
          type: object
          properties:
            name:
              type: string
            studentId:
              type: string

    JoinClassroomResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            sessionId:
              type: string
            classroomInfo:
              type: object
              properties:
                teacherName:
                  type: string
                currentTopic:
                  type: string
                studentCount:
                  type: integer

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        services:
          type: object
          properties:
            ai:
              type: boolean
            database:
              type: boolean
            cache:
              type: boolean
        uptime:
          type: integer
        version:
          type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            message:
              type: string
            type:
              type: string
            details:
              type: object
            requestId:
              type: string

  responses:
    BadRequest:
      description: 请求参数错误
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: 输入验证失败
              type: invalid_input
              details:
                field: messages[0].content
                reason: 内容过长

    TooManyRequests:
      description: 请求过于频繁
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            error:
              message: 请求过于频繁
              type: rate_limit_exceeded
              retryAfter: 60

    InternalError:
      description: 服务器内部错误
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ServiceUnavailable:
      description: 服务暂时不可用
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []