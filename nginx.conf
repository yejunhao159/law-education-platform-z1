# =============================================================================
# Nginx 反向代理配置 - 法学教育平台
# =============================================================================
# 用途：生产环境的反向代理、负载均衡、SSL终止
# 部署位置：/etc/nginx/conf.d/law-education.conf
# =============================================================================

# 上游服务器配置
upstream nextjs_backend {
    # Next.js 主应用（3000端口）
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;

    # 如果有多个实例可以添加更多服务器
    # server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;

    keepalive 32;
}

upstream socketio_backend {
    # Socket.IO 服务（3001端口）
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;

    # Socket.IO需要IP Hash以保持会话粘性
    ip_hash;

    keepalive 32;
}

# HTTP 服务器（重定向到 HTTPS）
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;

    # ACME 挑战（Let's Encrypt证书验证）
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 重定向到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS 服务器（主配置）
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;

    # =========================================================================
    # SSL 证书配置
    # =========================================================================
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # SSL 优化配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # =========================================================================
    # 安全头
    # =========================================================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # =========================================================================
    # 日志配置
    # =========================================================================
    access_log /var/log/nginx/law-education-access.log;
    error_log /var/log/nginx/law-education-error.log;

    # =========================================================================
    # 客户端配置
    # =========================================================================
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # =========================================================================
    # Gzip 压缩
    # =========================================================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # =========================================================================
    # Socket.IO WebSocket 路由
    # =========================================================================
    location /socket.io/ {
        proxy_pass http://socketio_backend;

        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 代理头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置（WebSocket需要长连接）
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;

        # 禁用缓冲
        proxy_buffering off;
    }

    # =========================================================================
    # API 路由
    # =========================================================================
    location /api/ {
        proxy_pass http://nextjs_backend;

        # 代理头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 禁用缓冲（流式响应）
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # =========================================================================
    # 静态资源（Next.js）
    # =========================================================================
    location /_next/static/ {
        proxy_pass http://nextjs_backend;
        proxy_cache_valid 200 365d;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location /static/ {
        proxy_pass http://nextjs_backend;
        proxy_cache_valid 200 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # =========================================================================
    # 主应用路由
    # =========================================================================
    location / {
        proxy_pass http://nextjs_backend;

        # 代理头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 禁用缓冲
        proxy_buffering off;
    }

    # =========================================================================
    # 健康检查（不记录日志）
    # =========================================================================
    location /api/health {
        proxy_pass http://nextjs_backend;
        access_log off;
    }
}
