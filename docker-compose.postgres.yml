# =============================================================================
# Docker Compose 配置 - PostgreSQL版本
# =============================================================================
# 用途：本地开发和测试，包含PostgreSQL数据库
# 使用方法：
#   启动：docker-compose -f docker-compose.postgres.yml up -d
#   停止：docker-compose -f docker-compose.postgres.yml down
#   查看日志：docker-compose -f docker-compose.postgres.yml logs -f
#   重置数据库：docker-compose -f docker-compose.postgres.yml down -v
# =============================================================================

version: '3.9'

services:
  # PostgreSQL 数据库服务
  postgres:
    image: postgres:16-alpine
    container_name: law-edu-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: law_education
      # PostgreSQL配置优化
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      # 持久化数据
      - postgres_data:/var/lib/postgresql/data
      # 初始化脚本（可选）
      # - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - law-edu-network

  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      args:
        DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
        AI_302_API_KEY: ${AI_302_API_KEY}
        NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
        DB_HOST: postgres
        DB_PORT: 5432
        DB_NAME: law_education
        DB_USER: postgres
        DB_PASSWORD: postgres

    image: law-edu-platform:optimized-latest
    container_name: law-edu-app
    depends_on:
      postgres:
        condition: service_healthy

    # 端口映射
    ports:
      - "3000:3000"
      - "3001:3001"

    # 环境变量
    environment:
      # Node.js环境
      - NODE_ENV=production
      - PORT=3000
      - SOCKET_PORT=3001
      - HOSTNAME=0.0.0.0

      # 数据库连接
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=law_education
      - DB_USER=postgres
      - DB_PASSWORD=postgres

      # API密钥
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - AI_302_API_KEY=${AI_302_API_KEY}
      - NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}

      # 游客模式（可选，默认false）
      - GUEST_MODE=${GUEST_MODE:-false}

      # 自动种子数据
      - AUTO_SEED_DATABASE=true

    # 健康检查
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # 重启策略
    restart: unless-stopped

    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    networks:
      - law-edu-network

  # PostgreSQL 管理工具（可选）
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: law-edu-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@law-edu.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - law-edu-network
    profiles:
      - admin  # 仅在需要时启动：docker-compose --profile admin up

# 网络配置
networks:
  law-edu-network:
    name: law-edu-network
    driver: bridge

# 数据卷
volumes:
  postgres_data:
    name: law-edu-postgres-data
