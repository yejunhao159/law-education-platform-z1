{
  "permissions": {
    "allow": [
      "mcp__promptx__action",
      "Bash(ls:*)",
      "Bash(awk:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "mcp__promptx__recall",
      "Bash(cat:*)",
      "Bash(git mv:*)",
      "mcp__promptx__remember",
      "Bash(tree:*)",
      "WebFetch(domain:github.com)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(npm run dev:*)",
      "mcp__context7__resolve-library-id",
      "Read(//tmp/**)",
      "Bash(pkill:*)",
      "Bash(curl:*)",
      "Bash(npm run type-check:*)",
      "mcp__ide__getDiagnostics",
      "Bash(rm:*)",
      "Bash(npx tsc:*)",
      "Bash(psql:*)",
      "Bash(docker exec:*)",
      "Bash(docker port:*)",
      "Bash(ip addr:*)",
      "mcp__promptx__toolx",
      "WebSearch",
      "mcp__promptx__discover",
      "Bash(docker logs:*)",
      "WebFetch(domain:stackoverflow.com)",
      "Bash(docker ps:*)",
      "Bash(node /tmp/query-db.js:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(kill:*)",
      "Read(//home/yejh0725/**)",
      "WebFetch(domain:docs.trychroma.com)",
      "Bash(xargs:*)",
      "Bash(git reset:*)",
      "Bash(git push:*)",
      "Bash(uv --version:*)",
      "Bash(sh)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(uv tool install:*)",
      "Bash(specify init:*)",
      "Bash(.specify/scripts/bash/check-prerequisites.sh:*)",
      "Bash(.specify/scripts/bash/create-new-feature.sh:*)",
      "Bash(.specify/scripts/bash/setup-plan.sh:*)",
      "Bash(.specify/scripts/bash/update-agent-context.sh:*)",
      "Bash(git rev-parse:*)",
      "Bash(if [ -f .env.local ])",
      "Bash(then)",
      "Bash(if grep -q \"SNAPSHOT_DEFAULT_ORG_ID\" .env.local)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(then echo \"✅ .env.local 存在\")",
      "Bash(else echo \"⚠️  .env.local 不存在\")",
      "Bash(if [ -f migrations/001_snapshot_tables.sql ])",
      "Bash(then echo \"✅ 迁移脚本存在\")",
      "Bash(else echo \"❌ 迁移脚本不存在\")",
      "Bash(chmod:*)",
      "Bash(node scripts/verify-snapshot-setup.js:*)",
      "Bash(for file in \"SnapshotWriter.ts\" \"DialogueWriter.ts\" \"SnapshotValidator.ts\" \"SnapshotConverterV2.ts\")",
      "Bash(do echo \"检查 $file:\")",
      "Bash(done)",
      "Bash(for route in ingest snapshot publish versions dialogues)",
      "Bash(do echo \"\")",
      "Bash(echo:*)",
      "Bash(if [ -f \"app/api/teaching-sessions/$route/route.ts\" ])",
      "Bash([ -f \"app/api/teaching-sessions/\\[id\\]/$route/route.ts\" ])",
      "Bash(then grep -h \"import\" app/api/teaching-sessions/**/$route/route.ts)",
      "Bash(else echo \"  (未找到)\")",
      "Bash(bash:*)",
      "Bash(node check-db-act2.js:*)",
      "Bash(node:*)",
      "Bash(npx ts-node:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run db:test-api:*)",
      "Bash(npm run dev:all:*)",
      "Bash(pg_isready:*)",
      "Bash(PGPASSWORD=postgres psql:*)",
      "Bash(then echo \"=== .env.local DB配置 ===\")",
      "Bash(else echo \"❌ .env.local不存在\")",
      "Bash(npm run db:check:*)",
      "Bash(npm run db:sessions:*)",
      "Bash(npm run db:act2:*)"
    ],
    "deny": [],
    "ask": []
  }
}
